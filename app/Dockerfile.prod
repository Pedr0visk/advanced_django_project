###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev libc-dev linux-headers

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY requirements.prod.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.prod.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

ENV PATH="/scripts:${PATH}"

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.prod.txt .
RUN pip install --no-cache /wheels/*

# copy project
COPY ./manage.py $APP_HOME
COPY ./apps $APP_HOME/apps
COPY ./bop $APP_HOME/bop
COPY ./static $APP_HOME/static
COPY ./templates $APP_HOME/templates
COPY ./scripts /scripts

RUN chmod +x /scripts/*

RUN mkdir -p /vol/web/media
RUN mkdir -p /vol/web/static

# chown all the files to the app user
RUN chown -R app:app $APP_HOME
RUN chown -R app:app /vol
RUN chown -R 755 /vol/web

# change to the app user
USER app

# run entrypoint.prod.sh
CMD ["/home/app/web/entrypoint.prod.sh"]
